name: Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
            - os: windows-latest
              vcpkg-root: "$env:VCPKG_INSTALLATION_ROOT"
              vcpkg-cmake-file: "$env:VCPKG_INSTALLATION_ROOT\\scripts\\buildsystems\\vcpkg.cmake"
            - os: ubuntu-latest
              vcpkg-root: "$VCPKG_INSTALLATION_ROOT"
              vcpkg-cmake-file: "$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
            - os: macos-latest
              vcpkg-root: "$VCPKG_INSTALLATION_ROOT"
              vcpkg-cmake-file: "$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
     
    env:
      CMAKE_BUILD_DIR: ${{ github.workspace }}/build
      CMAKE_TEST_DIR: ${{ github.workspace }}/build/test

    steps:
    - name: echo path
      run: |
        echo ${{ matrix.vcpkg-cmake-file }}
        echo ${{ matrix.vcpkg-root }}

    - uses: actions/checkout@v2

    - name: dependencies (macos)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew install llvm
        ln -s "/usr/local/opt/llvm/bin/clang-format" "/usr/local/bin/clang-format"
        ln -s "/usr/local/opt/llvm/bin/clang-tidy" "/usr/local/bin/clang-tidy"

    - name: Restore artifacts, or setup vcpkg (do not install any package)
      uses: lukka/run-vcpkg@v6
      with:
        setupOnly: true
        doNotUpdateVcpkg: true
        vcpkgDirectory: '${{ matrix.vcpkg-root }}'
        appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
        additionalCachedPaths: ${{ env.CMAKE_BUILD_DIR }}/vcpkg_installed

    - name: configure to use clang-tidy        
      run: |
        cmake -B "${{ env.CMAKE_BUILD_DIR }}" -DCLANG_TIDY=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE="${{ matrix.vcpkg-cmake-file}}" .

    - name: build
      run: |
        cmake --build "${{ env.CMAKE_BUILD_DIR }}"

    - name: Unit tests
      run: |
        cmake --build "${{ env.CMAKE_BUILD_DIR }}" --target hpke_test
        cd build/lib/hpke/test/ && ctest
        cmake --build "${{ env.CMAKE_BUILD_DIR }}" --target tls_syntax_test
        cd build/lib/tls_syntax/test/ && ctest
        cmake --build "${{ env.CMAKE_BUILD_DIR }}" --target mls_vectors_test
        cd build/lib/mls_vectors/test/ && ctest
        cd "${{ env.CMAKE_TEST_DIR }}" && ctest
